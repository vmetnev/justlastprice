import { ColNode } from './ColNode';
import { TableNode } from './TableNode';
import { XMLNode } from './XMLNode';
export declare class RowNode extends XMLNode {
    private isHeader;
    private isEmpty;
    getIsEmpty(): boolean;
    clone(): RowNode;
    setIsHeader(isHeader: boolean): void;
    getIsHeader(): boolean;
    getChildren(): ColNode[];
    getParent(): TableNode;
    getNextSibling(): RowNode | null;
    getPreviousSibling(): RowNode | null;
    /**
     * Uses the columns in this row to build a table. Each column is also an array since cols can touch
     * multiple other cells on the top and bottom due to colspan.
     *
     * ```ts
     * const returnExample = [
     *     [ [ColNode, ColNode], [ColNode], [ColNode, ColNode, ColNode] ]
     *     [ [ColNode], [ColNode], [ColNode] ], // this row
     *     [ [ColNode], [ColNode], [ColNode, ColNode] ],
     * ]
     * ```
     */
    getTableFromCols(): ColNode[][][];
    toTable(parseValues?: boolean): (string | number | null)[][];
    toArray(parseValues?: boolean): (string | number | null)[];
}
